#!/usr/bin/perl
$verbose_command=true;
$verbose_stdout=true;

$dbs_arch="i386";
$dbs_include="apache2";
$dbs_ver="etch";

$user=`whoami`;
chomp($user);
if ($user ne "root") {
	die("Error, must run this as root\n");
}
if ($#ARGV + 1 != 1) {
	die("Usage: makeguest name\n");
}
$uuid  = $ARGV[0];
open(LOGFILE, ">makeguest.log.$uuid") or die("ERROR: can't create logfile!");
$tmp = "/tmp/vmbench-$uuid";

sub log_info{
	print LOGFILE "$_[0]\n";
	print "$_[0]\n";
}

sub log_fatal {
	print LOGFILE "$_[0]\n";
	die("$_[0]");
}

sub ex_quiet {
	if ($_[1]) {
		log_info("TASK: $_[1]");
	}
	if ($verbose_command) {
		log_info("COMMAND: $_[0]");
	}
	$ret = `$_[0] 2>&1`;
	if ($? != 0) {
		log_info("OUTPUT: $ret\n");
		log_fatal("ERROR: Return Code $?\n");
	}
	return $ret;
}

sub ex_verbose {
	if ($_[1]) {
		log_info("TASK: $_[1]");
	}
	if ($verbose_command) {
		log_info("COMMAND: $_[0]");
	}
	system("$_[0]");
	if ($? != 0) {
		log_fatal("ERROR: Return Code $?");
	}
}


#ex_quiet("mkdir $tmp", "Creating Temporary Folder $tmp");
# I have commented this out, cause I already tested it, and it works
#ex_verbose("debootstrap --arch $dbs_arch --include=$dbs_include $dbs_ver $tmp", "Creating debian $dbs_ver image with arch $dbs_arch");

$initial_size=ex_quiet("$tmp | awk '{print $1}'", "Obtaining initial image size");
$final_size = $initial_size + 1024*1024*512;
$end = $final_size -1;
$raw="$uuid-raw.img";
ex_quiet("dd if=/dev/zero of=$raw bs=1 count=1 seek=$final_size", "Creating sparse image file $raw");
ex_quiet("parted --script $raw mklabel msdos && parted --script $raw mkpartfs primary ext2 0 $end", "Partitioning image $raw");



